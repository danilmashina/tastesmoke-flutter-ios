name: iOS IPA Build (Flutter)

on:
  workflow_dispatch:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: macos-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        channel: 'stable'
        
    - name: Verify Flutter installation
      run: |
        flutter --version
        flutter doctor -v
        
    - name: Get Flutter dependencies (first time)
      run: flutter pub get
      
    - name: Check iOS directory structure
      run: |
        ls -la ios/
        echo "--- Checking for Generated.xcconfig ---"
        ls -la ios/Flutter/ || echo "Flutter directory doesn't exist yet"
        
    - name: Clean and regenerate Flutter files
      run: |
        flutter clean
        flutter pub get
        flutter precache --ios
        
    - name: Setup CocoaPods
      run: |
        echo "--- Verifying Generated.xcconfig exists ---"
        ls -la ios/Flutter/Generated.xcconfig
        echo "--- Starting CocoaPods installation ---"
        cd ios
        pod --version
        pod install --repo-update --verbose
        
    - name: Build iOS App (без подписи для AltStore)
      run: |
        echo "--- Полная очистка среды ---"
        cd ios && pod deintegrate && cd ..
        flutter clean
        rm -rf ios/Pods
        rm -rf ios/Podfile.lock
        rm -rf ios/.symlinks
        rm -rf .dart_tool
        
        echo "--- Повторная инициализация ---"
        flutter pub get
        flutter precache --ios
        cd ios && pod install --repo-update && cd ..
        
        echo "--- Сборка с обходом -G флага (только debug) ---"
        
        # Попытка 1: Debug device build (избегаем release оптимизации)
        if flutter build ios --debug --no-codesign; then
          echo "--- Успешная device debug сборка ---"
          APP_PATH="build/ios/Debug-iphoneos/Runner.app"
        # Попытка 2: Debug simulator build
        elif flutter build ios --debug --no-codesign --simulator; then
          echo "--- Успешная debug simulator сборка ---"
          APP_PATH="build/ios/Debug-iphonesimulator/Runner.app"
        # Попытка 3: Полная пересборка с minimal настройками
        else
          echo "--- Обычные сборки не удались, полная пересборка ---"
          flutter clean
          rm -rf ios/Pods ios/Podfile.lock
          
          echo "--- Минимальная сборка без оптимизаций ---"
          # Убираем все оптимизации из Podfile временно
          cp ios/Podfile ios/Podfile.backup
          cat > ios/Podfile.minimal << 'EOF'
platform :ios, '13.0'
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end
  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT=(.*)/) 
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)
flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks!
  use_modular_headers!
  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
    target.build_configurations.each do |config|
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'
      config.build_settings['ENABLE_BITCODE'] = 'NO'
      # Минимальные настройки для избежания -G флага
      config.build_settings['GCC_GENERATE_DEBUGGING_SYMBOLS'] = 'NO'
      config.build_settings['DEBUG_INFORMATION_FORMAT'] = 'dwarf-with-dsym'
    end
  end
end
EOF
          
          mv ios/Podfile.minimal ios/Podfile
          flutter pub get
          flutter precache --ios
          cd ios && pod install --repo-update && cd ..
          
          if flutter build ios --debug --no-codesign; then
            echo "--- Успешная minimal debug сборка ---"
            APP_PATH="build/ios/Debug-iphoneos/Runner.app"
          else
            echo "--- Критическая ошибка: все стратегии не удались ---"
            echo "Логи Xcode build:"
            flutter build ios --debug --no-codesign --verbose || true
            echo "Состояние проекта:"
            ls -la ios/ || true
            exit 1
          fi
        fi
        
        echo "--- Проверка собранного приложения ---"
        if [ ! -d "$APP_PATH" ]; then
          echo "--- Приложение не найдено: $APP_PATH ---"
          find build -name "*.app" -type d 2>/dev/null || true
          exit 1
        fi
        
        echo "--- Найдено приложение: $APP_PATH ---"
        ls -la "$APP_PATH" | head -3
        
        echo "--- Создание .ipa ---"
        mkdir -p build/ios/ipa
        cp -r "$APP_PATH" build/ios/ipa/
        cd build/ios/ipa
        mkdir -p Payload
        cp -r Runner.app Payload/
        zip -r TasteSmoke.ipa Payload/
        ls -la *.ipa
          
    - name: Upload IPA artifact
      uses: actions/upload-artifact@v4
      with:
        name: TasteSmoke-iOS-${{ github.run_number }}
        path: |
          build/ios/ipa/*.ipa
          build/ios/ipa/*.app
        retention-days: 30
        
    - name: Upload dSYM symbols (отладка)
      uses: actions/upload-artifact@v4
      with:
        name: TasteSmoke-dSYM-${{ github.run_number }}
        path: |
          build/ios/iphoneos/Runner.app.dSYM
          build/ios/Release-iphoneos/Runner.app.dSYM
        retention-days: 7
        if-no-files-found: ignore