name: iOS IPA Build (Flutter)

on:
  workflow_dispatch:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: macos-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        channel: 'stable'
        architecture: x64
        
    - name: Verify Flutter installation
      run: |
        flutter --version
        flutter doctor -v
        
    - name: Get Flutter dependencies (first time)
      run: flutter pub get
      
    - name: Check iOS directory structure
      run: |
        ls -la ios/
        echo "--- Checking for Generated.xcconfig ---"
        ls -la ios/Flutter/ || echo "Flutter directory doesn't exist yet"
        
    - name: Clean and regenerate Flutter files
      run: |
        flutter clean
        flutter pub get
        flutter precache --ios
        
    - name: Setup CocoaPods
      run: |
        echo "--- Verifying Generated.xcconfig exists ---"
        ls -la ios/Flutter/Generated.xcconfig
        echo "--- Starting CocoaPods installation ---"
        cd ios
        pod --version
        # Remove any existing Generated.xcconfig with Windows paths
        rm -f Flutter/Generated.xcconfig
        # Regenerate it properly for macOS
        cd ..
        flutter precache --ios
        cd ios
        pod install --repo-update --verbose
        
    - name: Fix Generated.xcconfig for macOS
      run: |
        echo "--- Fixing Generated.xcconfig for macOS ---"
        cd ios
        # Remove any existing Generated.xcconfig with Windows paths
        rm -f Flutter/Generated.xcconfig
        cd ..
        # Regenerate it properly for macOS
        flutter precache --ios
        # Verify the fix
        echo "Generated.xcconfig contents:"
        cat ios/Flutter/Generated.xcconfig
        
    - name: Build iOS App (без подписи для AltStore)
      run: |
        echo "--- Полная очистка среды ---"
        cd ios && pod deintegrate && cd ..
        flutter clean
        rm -rf ios/Pods
        rm -rf ios/Podfile.lock
        rm -rf ios/.symlinks
        rm -rf .dart_tool
        
        echo "--- Повторная инициализация ---"
        flutter pub get
        flutter precache --ios
        cd ios
        # Remove any existing Generated.xcconfig with Windows paths
        rm -f Flutter/Generated.xcconfig
        cd ..
        flutter precache --ios
        cd ios && pod install --repo-update && cd ..
        
        echo "--- Простая debug сборка (без сложных fallback) ---"
        # Ensure we're using the correct build settings
        export FLUTTER_BUILD_MODE=debug
        
        # Попытка 1: Debug device build with explicit settings
        if flutter build ios --debug --no-codesign --build-number=1 --build-name=1.0.0 --dart-define=FLUTTER_BUILD_MODE=debug --verbose; then
          echo "--- Успешная device debug сборка ---"
          APP_PATH="build/ios/Debug-iphoneos/Runner.app"
        # Попытка 2: Debug simulator build
        elif flutter build ios --debug --no-codesign --simulator --build-number=1 --build-name=1.0.0 --dart-define=FLUTTER_BUILD_MODE=debug --verbose; then
          echo "--- Успешная debug simulator сборка ---"
          APP_PATH="build/ios/Debug-iphonesimulator/Runner.app"
        else
          echo "--- Критическая ошибка: debug сборки не удались ---"
          echo "Логи Flutter doctor:"
          flutter doctor -v
          echo "Логи Podfile:"
          cat ios/Podfile
          echo "Логи Generated.xcconfig:"
          cat ios/Flutter/Generated.xcconfig || echo "Generated.xcconfig not found"
          echo "Логи pod install:"
          cd ios && pod install --verbose
          exit 1
        fi
        
        echo "--- Проверка собранного приложения ---"
        if [ ! -d "$APP_PATH" ]; then
          echo "--- Приложение не найдено: $APP_PATH ---"
          find build -name "*.app" -type d 2>/dev/null || true
          exit 1
        fi
        
        echo "--- Найдено приложение: $APP_PATH ---"
        ls -la "$APP_PATH" | head -3
        
        echo "--- Создание .ipa ---"
        mkdir -p build/ios/ipa
        cp -r "$APP_PATH" build/ios/ipa/
        cd build/ios/ipa
        mkdir -p Payload
        cp -r Runner.app Payload/
        zip -r TasteSmoke.ipa Payload/
        ls -la *.ipa
          
    - name: Upload IPA artifact
      uses: actions/upload-artifact@v4
      with:
        name: TasteSmoke-iOS-${{ github.run_number }}
        path: |
          build/ios/ipa/*.ipa
          build/ios/ipa/*.app
        retention-days: 30
        
    - name: Upload dSYM symbols (отладка)
      uses: actions/upload-artifact@v4
      with:
        name: TasteSmoke-dSYM-${{ github.run_number }}
        path: |
          build/ios/iphoneos/Runner.app.dSYM
          build/ios/Release-iphoneos/Runner.app.dSYM
        retention-days: 7
        if-no-files-found: ignore